<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.autumn.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.autumn.pojo.Users" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="userCode" property="usercode" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="group_code" property="groupCode" jdbcType="VARCHAR" />
  </resultMap>

  <!--根据用户id获取绑定的module菜单,以及所有的一级菜单-->
  <select id="getModuleByUid" resultType="com.autumn.pojo.SysModule">
    select distinct(sm.moduleCode),sm.moduleName,sm.modulePath,sm.parentCode,sm.isLeaf,sm.sortNumber
    from sys_module as sm
    left join sys_role_module srm on sm.moduleCode=srm.moduleCode
    left join sys_role sr on sr.roleCode=srm.roleCode
    left join sys_user_role sur on sur.roleCode=sr.roleCode
    left join users u on u.id = sur.userCode
    where u.id = #{uid}  or parentCode = '0' order by sm.sortNumber
  </select>



  <sql id="Base_Column_List" >
    id, userCode, pwd, name, sex, birthday, group_code
  </sql>

  <!--登录-->
  <select id="selectByUserCodeAndPwd" resultType="com.autumn.pojo.Users">
    select u.*,GROUP_CONCAT(DISTINCT(sr.roleCode)) as userTypeCode,GROUP_CONCAT(DISTINCT(sr.roleName)) as userTypeName
    from users u
    left join sys_user_role sur on sur.userCode=u.id
    left join sys_role sr on sr.roleCode=sur.roleCode
    where u.usercode = #{usercode,jdbcType=VARCHAR} and u.pwd = #{pwd,jdbcType=VARCHAR}
  </select>

  <!--分页获取所有用户-->
  <select id="getAllUsersByPage" resultType="com.autumn.pojo.Users">
    select u.*,GROUP_CONCAT(DISTINCT(sr.roleCode)) as userTypeCode,GROUP_CONCAT(DISTINCT(sr.roleName)) as userTypeName
    from users u
    left join sys_user_role sur on sur.userCode=u.id
    left join sys_role sr on sr.roleCode=sur.roleCode
    group by u.userCode
  </select>

  <!--获取用户总数-->
  <select id="getAllUsersCount" resultType="java.lang.Integer">
    select
    count(*)
    from users u
    left join sys_user_role sur on sur.userCode=u.id
    left join sys_role sr on sr.roleCode=sur.roleCode
  </select>

  <!--更改密码-->
  <update id="upPsw">
    update users
    <set >
      <if test="psw_new != null" >
        pwd = #{psw_new,jdbcType=VARCHAR},
      </if>
    </set>
    <where>
      id = #{userId}
    </where>
  </update>

  <select id="getAllUserByUid" resultType="com.autumn.pojo.Users">
     select id,name from users where id in (select id from users where group_code=(select group_code from users where id = #{userId}))
  </select>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.autumn.pojo.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from users
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.autumn.pojo.UsersExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.autumn.pojo.Users" >
    insert into users (id, userCode, pwd, 
      name, sex, age, group_code
      )
    values (#{id,jdbcType=VARCHAR}, #{usercode,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{groupCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.autumn.pojo.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="usercode != null" >
        userCode,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="groupCode != null" >
        group_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="usercode != null" >
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="groupCode != null" >
        #{groupCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.autumn.pojo.UsersExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.usercode != null" >
        userCode = #{record.usercode,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null" >
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.groupCode != null" >
        group_code = #{record.groupCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set id = #{record.id,jdbcType=VARCHAR},
      userCode = #{record.usercode,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      age = #{record.age,jdbcType=INTEGER},
      group_code = #{record.groupCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.autumn.pojo.Users" >
    update users
    <set >
      <if test="usercode != null" >
        userCode = #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="groupCode != null" >
        group_code = #{groupCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.autumn.pojo.Users" >
    update users
    set userCode = #{usercode,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      group_code = #{groupCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>